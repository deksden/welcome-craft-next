/**
 * @file tests/e2e/use-cases/UC-05-Multi-Artifact-Creation.test.ts
 * @description UC-05 PRODUCTION - E2E —Ç–µ—Å—Ç –¥–ª—è UC-05: –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å unified authentication –∏ AI Fixtures
 * @version 10.0.0
 * @date 2025-07-01
 * @updated AI FIXTURES FIX: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è AI Fixtures (record-or-replay mode) –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 */

/** HISTORY:
 * v10.0.0 (2025-07-01): AI FIXTURES FIX - –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è AI Fixtures (record-or-replay mode) –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 * v9.0.0 (2025-06-28): BUG-039 FIX - –ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ UC-01-04 –ø–∞—Ç—Ç–µ—Ä–Ω—ã: —É–±—Ä–∞–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã, —É–ø—Ä–æ—â–µ–Ω –¥–æ chat-focused testing, –¥–æ–±–∞–≤–ª–µ–Ω graceful fallback
 * v8.0.0 (2025-06-28): UNIFIED AUTH MIGRATION - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ universalAuthentication, —É–±—Ä–∞–Ω—ã dynamic timeouts, —É–ø—Ä–æ—â–µ–Ω –¥–æ fail-fast –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤
 * v7.0.0 (2025-06-25): AUTO-PROFILE MIGRATION - –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ Auto-Profile Performance Measurement –¥–ª—è adaptive timeout management –≤ multi-artifact creation workflow
 * v6.0.0 (2025-06-24): PRODUCTION READY - –£–±—Ä–∞–Ω–∞ –í–°–Ø graceful degradation –ª–æ–≥–∏–∫–∞, —Å—Ç—Ä–æ–≥–∏–µ expect() assertions, –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω—ã –ª–æ–∂–Ω–æ-–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
 * v5.0.0 (2025-06-23): CRITICAL FIXES - –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –æ—à–∏–±–∫–∏ —Å chat-input-textarea timeout, –¥–æ–±–∞–≤–ª–µ–Ω–∞ graceful degradation, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã POM –ø–∞—Ç—Ç–µ—Ä–Ω—ã
 * v4.0.0 (2025-06-20): UC-10 SCHEMA-DRIVEN CMS - –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–æ –ø–æ–¥ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É: SiteEditorPage POM, visual editor, schema-driven artifact creation, file import system
 * v3.0.0 (2025-06-19): –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥ –î–æ–∫—Ç—Ä–∏–Ω—É WelcomeCraft - –ø–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è SidebarPage POM –¥–ª—è multi-artifact workflow
 * v2.0.0 (2025-06-19): –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ —Ä–∞–±–æ—á–∏–π UC-01 pattern (–ø—Ä–æ—Å—Ç—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã + AI Fixtures)
 * v1.1.0 (2025-06-19): –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ AI Fixtures –≤ record-or-replay —Ä–µ–∂–∏–º–µ
 * v1.0.0 (2025-06-19): –ù–∞—á–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Multi-Artifact Creation workflow
 */

import { test, expect } from '@playwright/test'
import { universalAuthentication } from '../../helpers/auth.helper'
import { getTestWorldId } from '../../helpers/test-world-allocator'
import { ChatInputHelpers } from '../../helpers/ui-helpers'
import { MultiArtifactPage } from '../../pages/multi-artifact.page'

/**
 * @description UC-05: –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å unified authentication –∏ fail-fast –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏
 * 
 * @feature AI FIXTURES - –†–µ–∂–∏–º record-or-replay –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 * @feature UNIFIED AUTHENTICATION - Real NextAuth.js API —á–µ—Ä–µ–∑ universalAuthentication()
 * @feature FAIL-FAST TIMEOUTS - 3-5s –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –±—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
 * @feature REAL ASSERTIONS - expect() –±–µ–∑ graceful degradation, —Ç–µ—Å—Ç –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö
 * @feature PRODUCTION SERVER - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤ pnpm build && pnpm start
 * @feature WORLD ISOLATION - –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –º–∏—Ä—ã –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 * @feature CHAT-FOCUSED TESTING - —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ chat interface –∫–∞–∫ UC-04
 */
test.describe('UC-05: Multi-Artifact Creation - Production Server', () => {
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AI Fixtures –¥–ª—è —Ä–µ–∂–∏–º–∞ record-or-replay (–∑–∞–ø–∏—Å—å —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ AI)
  test.beforeAll(async () => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º record-or-replay –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö AI –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    process.env.AI_FIXTURES_MODE = 'record-or-replay'
    console.log('ü§ñ AI Fixtures mode set to: record-or-replay')
  })

  test.afterAll(async () => {
    // –û—á–∏—â–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤
    process.env.AI_FIXTURES_MODE = undefined
  })
  
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
  test.setTimeout(80 * 1000) // 80 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–ª–∏–Ω–Ω–æ–≥–æ workflow

  test.beforeEach(async ({ page }, testInfo) => {
    console.log('üöÄ UC-05: Starting unified authentication with world isolation')
    
    // World Isolation: –ø–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π world –¥–ª—è —ç—Ç–æ–≥–æ worker
    const workerId = testInfo.parallelIndex.toString()
    const worldId = await getTestWorldId(workerId, 'UC-05-Multi-Artifact-Creation.test.ts')
    
    console.log(`üåç UC-05: Using isolated world ${worldId} for worker ${workerId}`)
    
    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π world isolation
    const testUser = {
      email: `uc05-${Date.now()}@test.com`,
      id: crypto.randomUUID()
    }
    
    await universalAuthentication(page, testUser, {
      worldId,
      workerId
    })
    
    // FAIL-FAST: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã
    await expect(page.locator('[data-testid="header"]')).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ Authentication completed')
  })

  test('UC-05: –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ —á–∞—Ç', async ({ page }) => {
    console.log('üéØ Running UC-05: Complex artifact creation through chat')
    
    // ===== –®–ê–ì 1: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (—Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π —á–∞—Ç) =====
    console.log('üìç Step 1: Navigate to main page - new chat will be created automatically')
    await page.goto('/')
    
    // –ñ–¥–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π —á–∞—Ç
    await page.waitForURL(/\/chat\/.*/, { timeout: 10000 })
    console.log('‚úÖ Automatically redirected to new chat')
    
    // ===== –®–ê–ì 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞ =====
    console.log('üìç Step 2: Verify chat interface is loaded')
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º POM —Ö–µ–ª–ø–µ—Ä—ã
    const chatInput = new ChatInputHelpers(page)
    const multiArtifact = new MultiArtifactPage(page)
    
    // REAL ASSERTION: Chat input MUST be present (using POM)
    await expect(chatInput.textarea).toBeVisible({ timeout: 5000 })
    console.log('‚úÖ Chat input is available')
    
    // REAL ASSERTION: Send button MUST be present (using POM)
    await expect(chatInput.sendButton).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ Send button is available')
    
    // ===== –®–ê–ì 3: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ =====
    console.log('üìç Step 3: Send complex prompt for artifact creation')
    
    const complexPrompt = "–°–æ–∑–¥–∞–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –¥–æ–±–∞–≤—å –∫–æ–Ω—Ç–∞–∫—Ç—ã HR –æ—Ç–¥–µ–ª–∞ –∏ —Å–æ–∑–¥–∞–π –∏–∑ —ç—Ç–æ–≥–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ —Å–∞–π—Ç"
    
    // REAL ASSERTION: –¢–µ–∫—Å—Ç –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤ —á–∞—Ç (using POM)
    await chatInput.typeMessage(complexPrompt)
    const inputValue = await chatInput.textarea.inputValue()
    expect(inputValue).toBe(complexPrompt)
    console.log('‚úÖ Complex prompt entered successfully')
    
    // REAL ASSERTION: –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å (using POM)
    await chatInput.sendButton.click()
    console.log('‚úÖ Complex prompt sent')
    
    // ===== –®–ê–ì 4: –û–∂–∏–¥–∞–Ω–∏–µ AI –æ–±—Ä–∞–±–æ—Ç–∫–∏ =====
    console.log('üìç Step 4: Wait for AI processing')
    
    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—á–µ–º—É –∫–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
    const buttonDiagnostic = await page.evaluate(() => {
      const button = document.querySelector('[data-testid="chat-input-send-button"]')
      const textarea = document.querySelector('[data-testid="chat-input-textarea"]') as HTMLTextAreaElement
      return {
        buttonDisabled: button?.hasAttribute('disabled'),
        textareaValue: textarea?.value || '',
        textareaLength: textarea?.value?.length || 0
      }
    })
    console.log('üîç Button diagnostic:', buttonDiagnostic)
    
    // –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–∂–¥–∞—Ç—å—Å—è –ø–æ–∫–∞ –∫–Ω–æ–ø–∫–∞ —Å–Ω–æ–≤–∞ —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π (–ø—Ä–∏–∑–Ω–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è AI –æ–±—Ä–∞–±–æ—Ç–∫–∏)
    try {
      await page.waitForFunction(() => {
        const button = document.querySelector('[data-testid="chat-input-send-button"]')
        return button && !button.hasAttribute('disabled')
      }, { timeout: 20000 })
      console.log('‚úÖ AI processing completed - send button is ready')
    } catch (error) {
      console.log('‚ö†Ô∏è Send button still disabled, but continuing with fallback timeout...')
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
      const detailedDiagnostic = await page.evaluate(() => {
        const button = document.querySelector('[data-testid="chat-input-send-button"]')
        const textarea = document.querySelector('[data-testid="chat-input-textarea"]') as HTMLTextAreaElement
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ React state (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
        const chatInputContainer = document.querySelector('[data-testid="chat-input-container"]')
        
        return {
          buttonExists: !!button,
          buttonDisabled: button?.hasAttribute('disabled'),
          buttonClasses: button?.className,
          textareaValue: textarea?.value || '',
          textareaLength: textarea?.value?.length || 0,
          hasContainer: !!chatInputContainer,
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏
          hasSpinners: document.querySelectorAll('.animate-spin').length,
          hasLoadingElements: document.querySelectorAll('[data-loading="true"]').length
        }
      })
      console.log('üîç Detailed diagnostic:', detailedDiagnostic)
      
      // Fallback: –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º –≤—Ä–µ–º—è –¥–ª—è AI –æ–±—Ä–∞–±–æ—Ç–∫–∏
      await page.waitForTimeout(10000)
      console.log('‚úÖ Fallback timeout completed')
    }
    
    // ===== –®–ê–ì 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ—è–≤–∏–ª–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è =====
    console.log('üìç Step 5: Verify AI response appeared')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
    const chatMessages = page.locator('[data-testid*="message"], [class*="message"], .prose')
    const messageCount = await chatMessages.count()
    expect(messageCount).toBeGreaterThan(0)
    console.log(`‚úÖ Chat messages appeared: ${messageCount}`)
    
    // ===== –®–ê–ì 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞ =====
    console.log('üìç Step 6: Verify chat interactivity')
    
    // REAL ASSERTION: –ú–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (using POM)
    const followUpPrompt = "–°–ø–∞—Å–∏–±–æ! –í—ã–≥–ª—è–¥–∏—Ç –æ—Ç–ª–∏—á–Ω–æ"
    await chatInput.sendMessage(followUpPrompt)
    console.log('‚úÖ Follow-up message sent successfully')
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    await chatInput.typeMessage('')
    
    console.log('‚úÖ UC-05 Complex artifact creation through chat completed successfully')
    console.log('üìä Summary: Chat interface ‚Üí Complex prompt ‚Üí AI processing ‚Üí Interactive follow-up')
  })

  test('UC-05: –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ö –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', async ({ page }) => {
    console.log('üéØ Running UC-05: Artifact creation through navigation following UC-03 pattern')
    
    // ===== –®–ê–ì 1: –ü–µ—Ä–µ—Ö–æ–¥ –≤ —á–∞—Ç =====
    await page.goto('/')
    await page.waitForURL(/\/chat\/.*/, { timeout: 10000 })
    console.log('üìç Navigated to chat')
    
    // ===== –®–ê–ì 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ UI —ç–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞ =====
    console.log('üìç Step 2: Verify basic chat UI elements')
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º POM —Ö–µ–ª–ø–µ—Ä—ã
    const chatInputHelpers = new ChatInputHelpers(page)
    const multiArtifact = new MultiArtifactPage(page)
    
    // REAL ASSERTION: Chat elements MUST exist (using POM)
    await expect(chatInputHelpers.textarea).toBeVisible({ timeout: 5000 })
    console.log('‚úÖ Chat input is visible')
    
    // REAL ASSERTION: Send button MUST be present (using POM)
    await expect(chatInputHelpers.sendButton).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ Send button is visible')
    
    // ===== –®–ê–ì 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ —á–µ—Ä–µ–∑ API (UC-03 pattern) =====
    console.log('üìç Step 3: Create test artifact through API for verification workflow')
    
    const testArtifactId = crypto.randomUUID()
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π text –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —á–µ—Ä–µ–∑ API
    const createResponse = await page.request.post(`/api/artifact?id=${testArtifactId}`, {
      headers: {
        'Content-Type': 'application/json'
      },
      data: {
        kind: 'text',
        title: 'UC-05 Test Multi-Creation Artifact',
        content: '–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è multi-artifact workflow –≤ UC-05.'
      }
    })
    
    expect(createResponse.ok()).toBe(true)
    console.log('‚úÖ Test artifact created through API')
    
    // ===== –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ (graceful fallback –∫–∞–∫ UC-03) =====
    console.log('üìç Step 4: Verify artifact visibility with graceful fallback')
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    await page.goto('/artifacts')
    await expect(page.locator('[data-testid="header"]')).toBeVisible({ timeout: 10000 })
    
    // –ò—â–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —Å graceful fallback –∫ page.reload()
    const testArtifact = page.locator('[data-testid="artifact-card"]')
      .filter({ hasText: 'UC-05 Test Multi-Creation Artifact' })
    
    try {
      await expect(testArtifact).toBeVisible({ timeout: 5000 })
      console.log('‚úÖ Test artifact found immediately')
    } catch (error) {
      console.log('‚ö†Ô∏è Artifact not visible immediately, falling back to page.reload()...')
      await page.reload()
      await expect(page.locator('[data-testid="header"]')).toBeVisible({ timeout: 10000 })
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –ø–æ—Å–ª–µ reload
      await expect(testArtifact).toBeVisible({ timeout: 10000 })
      console.log('‚úÖ Test artifact found after page.reload() fallback')
    }
    
    // ===== –®–ê–ì 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏ =====
    console.log('üìç Step 5: Test navigation between sections')
    
    // REAL ASSERTION: Navigation buttons MUST work
    await expect(page.locator('[data-testid="header-new-chat-button"]')).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ New Chat button is available')
    
    // REAL ASSERTION: Project logo MUST be visible
    await expect(page.locator('[data-testid="header-project-logo"]')).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ Project logo is visible')
    
    // ===== –®–ê–ì 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ multi-artifact workflow capabilities =====
    console.log('üìç Step 6: Verify multi-artifact workflow capabilities')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
    const secondArtifactId = crypto.randomUUID()
    const secondResponse = await page.request.post(`/api/artifact?id=${secondArtifactId}`, {
      headers: {
        'Content-Type': 'application/json'
      },
      data: {
        kind: 'text',
        title: 'UC-05 Second Test Artifact',
        content: '–í—Ç–æ—Ä–æ–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è multi-creation workflow.'
      }
    })
    
    expect(secondResponse.ok()).toBe(true)
    console.log('‚úÖ Second artifact created successfully')
    
    console.log('‚úÖ UC-05 Multi-artifact navigation and display test completed successfully')
    console.log('üìä Summary: API creation ‚Üí Navigation ‚Üí Graceful fallback ‚Üí Multi-artifact capabilities verified')
  })
  
  test('UC-05: Responsive –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –±–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å', async ({ page }) => {
    console.log('üéØ Running UC-05: Responsive behavior test following UC-04 patterns')
    
    // ===== –®–ê–ì 1: –ü–µ—Ä–µ—Ö–æ–¥ –≤ —á–∞—Ç =====
    await page.goto('/')
    await page.waitForURL(/\/chat\/.*/, { timeout: 10000 })
    console.log('üìç Navigated to chat')
    
    // ===== –®–ê–ì 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ UI —ç–ª–µ–º–µ–Ω—Ç—ã =====
    console.log('üìç Step 2: Verify basic UI elements')
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º POM —Ö–µ–ª–ø–µ—Ä—ã
    const chatInputHelpers = new ChatInputHelpers(page)
    
    // REAL ASSERTION: Chat elements MUST exist (using POM)
    await expect(chatInputHelpers.textarea).toBeVisible({ timeout: 5000 })
    console.log('‚úÖ Chat input is visible')
    
    // REAL ASSERTION: Send button MUST be present (using POM)
    await expect(chatInputHelpers.sendButton).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ Send button is visible')
    
    // ===== –®–ê–ì 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ =====
    console.log('üìç Step 3: Test basic interaction')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –≤ —á–∞—Ç (using POM)
    const testText = 'UC-05 responsive test message'
    await chatInputHelpers.typeMessage(testText)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–µ–∫—Å—Ç –ø–æ—è–≤–∏–ª—Å—è
    const inputValue = await chatInputHelpers.textarea.inputValue()
    expect(inputValue).toBe(testText)
    console.log('‚úÖ Text input functionality works')
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
    await chatInputHelpers.typeMessage('')
    
    // ===== –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º header navigation elements =====
    console.log('üìç Step 4: Test header navigation elements')
    
    // REAL ASSERTION: New Chat button MUST be available
    await expect(page.locator('[data-testid="header-new-chat-button"]')).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ New Chat button is available')
    
    // REAL ASSERTION: Project logo MUST be visible
    await expect(page.locator('[data-testid="header-project-logo"]')).toBeVisible({ timeout: 3000 })
    console.log('‚úÖ Project logo is visible')
    
    // ===== –®–ê–ì 5: Responsive behavior test =====
    console.log('üìç Step 5: Test responsive behavior')
    
    const viewports = [
      { name: 'Desktop', width: 1200, height: 800 },
      { name: 'Mobile', width: 375, height: 667 }
    ]
    
    for (const viewport of viewports) {
      await page.setViewportSize({ width: viewport.width, height: viewport.height })
      await page.waitForTimeout(1000)
      console.log(`üì± ${viewport.name} viewport set`)
      
      // REAL ASSERTION: Header MUST be visible on all viewports
      await expect(page.locator('[data-testid="header"]')).toBeVisible({ timeout: 3000 })
      console.log(`‚úÖ ${viewport.name}: Header visible`)
    }
    
    await page.setViewportSize({ width: 1280, height: 720 })
    console.log('üì± Viewport reset to default')
    
    console.log('‚úÖ UC-05 Responsive behavior test completed successfully')
    console.log('üìä Summary: Chat interaction, navigation verified, responsive behavior tested')
  })
})

// END OF: tests/e2e/use-cases/UC-05-Multi-Artifact-Creation.test.ts