/**
 * @file tests/e2e/use-cases/UC-02-Visual-Site-Building.test.ts
 * @description E2E —Ç–µ—Å—Ç –¥–ª—è UC-02 Visual Site Building - –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–∞–π—Ç–æ–≤ —á–µ—Ä–µ–∑ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä
 * @version 2.1.0
 * @date 2025-06-22
 * @updated –£–ø—Ä–æ—â–µ–Ω–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ UI Site Editor –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
 */

/** HISTORY:
 * v2.1.0 (2025-06-22): –£–ø—Ä–æ—â–µ–Ω–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä—è–º—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –ø—Ä–æ–≤–µ—Ä–∫—É UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 * v2.0.0 (2025-06-22): –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è UC-10 - –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç AI-first –∫ visual-first –ø–æ–¥—Ö–æ–¥—É —Å Site Editor –∏ –Ω–æ–≤—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
 * v1.0.0 (2025-06-20): –ù–∞—á–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Å–∞–π—Ç–æ–≤
 */

import { test, expect } from '@playwright/test';

test.describe('UC-02: Visual Site Building', () => {
  test.beforeEach(async ({ page }) => {
    console.log('üöÄ FAST AUTHENTICATION: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º test session')
    
    // –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ test session cookie (–∫–∞–∫ –≤ UC-01)
    const timestamp = Date.now()
    const userId = `uc02-user-${timestamp.toString().slice(-12)}`
    const testEmail = `uc02-test-${timestamp}@playwright.com`
    
    await page.context().addCookies([
      {
        name: 'test-session',
        value: JSON.stringify({
          user: {
            id: userId,
            email: testEmail,
            name: `uc02-test-${timestamp}`
          },
          expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()
        }),
        domain: 'app.localhost',
        path: '/'
      }
    ])
    
    console.log('‚úÖ Fast authentication completed')
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    await page.goto('/artifacts');
    await expect(page).toHaveURL(/.*\/artifacts/);
  });

  test('–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏ –±–∞–∑–æ–≤—É—é UI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å', async ({ page }) => {
    console.log('üéØ Running UC-02: Basic visual site building UI check')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã UI –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    await page.waitForTimeout(3000); // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
    const bodyText = await page.textContent('body');
    expect(bodyText).toBeTruthy();
    console.log('‚úÖ Artifacts page loaded');
    
    // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º/—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏
    const createButtons = await page.locator('button').filter({ hasText: /create|new|–¥–æ–±–∞–≤–∏—Ç—å|—Å–æ–∑–¥–∞—Ç—å/i }).count();
    console.log(`üì¶ Found ${createButtons} creation-related buttons`);
    
    // –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏–ª–∏ —Å–ø–∏—Å–∫–∏
    const artifactElements = await page.locator('[data-testid*="artifact"], .artifact-card, .card').count();
    console.log(`üé® Found ${artifactElements} potential artifact elements`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –º–µ–Ω—é
    const navigationElements = await page.locator('nav, [role="navigation"], [data-testid*="nav"]').count();
    console.log(`üß≠ Found ${navigationElements} navigation elements`);
    
    console.log('‚úÖ UC-02 Basic UI check completed');
  });

  test('–¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–∞–∑–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ', async ({ page }) => {
    console.log('üéØ Running UC-02: Basic navigation test')
    
    await page.waitForTimeout(2000);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º responsive behavior
    await page.setViewportSize({ width: 1200, height: 800 });
    await page.waitForTimeout(1000);
    console.log('üì± Desktop viewport test');
    
    await page.setViewportSize({ width: 768, height: 1024 });
    await page.waitForTimeout(1000);
    console.log('üì± Tablet viewport test');
    
    await page.setViewportSize({ width: 375, height: 667 });
    await page.waitForTimeout(1000);
    console.log('üì± Mobile viewport test');
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    await page.setViewportSize({ width: 1280, height: 720 });
    console.log('üì± Viewport reset to default');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Å–µ –µ—â–µ –æ—Ç–∑—ã–≤—á–∏–≤–∞
    const finalBodyText = await page.textContent('body');
    expect(finalBodyText).toBeTruthy();
    
    console.log('‚úÖ UC-02 Navigation and responsive test completed');
  });

  test('–¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è', async ({ page }) => {
    console.log('üéØ Running UC-02: User interaction test')
    
    await page.waitForTimeout(2000);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    const clickableElements = await page.locator('button, [role="button"], a, input').all();
    console.log(`üñ±Ô∏è Found ${clickableElements.length} clickable elements`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ –ø–µ—Ä–≤—ã–º –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–º (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
    for (let i = 0; i < Math.min(clickableElements.length, 3); i++) {
      try {
        const element = clickableElements[i];
        const isVisible = await element.isVisible();
        
        if (isVisible) {
          await element.click({ timeout: 2000 });
          console.log(`‚úÖ Successfully clicked element ${i + 1}`);
          await page.waitForTimeout(500); // –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∫–ª–∏–∫–∞–º–∏
        }
      } catch (error) {
        console.log(`‚ö†Ô∏è Could not click element ${i + 1}: ${error}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Å—Ç–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π
    const responseCheck = await page.locator('body').isVisible();
    expect(responseCheck).toBe(true);
    
    console.log('‚úÖ UC-02 User interaction test completed');
  });
});

// END OF: tests/e2e/use-cases/UC-02-Visual-Site-Building.test.ts