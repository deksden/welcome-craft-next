/**
 * @file tests/e2e/auth-test.test.ts
 * @description –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ test auth —Å–∏—Å—Ç–µ–º—ã
 * @version 2.0.0
 * @date 2025-06-15
 * @updated –ü–µ—Ä–µ–ø–∏—Å–∞–Ω –¥–ª—è –Ω–æ–≤–æ–π test auth —Å–∏—Å—Ç–µ–º—ã
 */

import { test, expect } from '@playwright/test';
import { setupTestAuth, generateTestUser, clearTestAuth, navigateWithAuth } from '../helpers/auth-helper';

test.describe('Auth System Test', () => {
  test('Test auth session setup and verification', async ({ page }) => {
    const testUser = generateTestUser('auth-test');
    
    console.log('üîê Starting test auth verification...');
    console.log(`üìß Test user: ${testUser.email}`);
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ auth sessions
    await clearTestAuth(page);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º test auth
    await setupTestAuth(page, testUser);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await navigateWithAuth(page, '/');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω (–µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É)
    await expect(page.getByTestId('chat-input')).toBeVisible();
    await expect(page.getByTestId('send-button')).toBeVisible();
    
    console.log('‚úÖ Test auth successfully verified!');
  });
  
  test('Unauthenticated user is redirected to login', async ({ page }) => {
    // –û—á–∏—â–∞–µ–º –≤—Å–µ auth sessions
    await clearTestAuth(page);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–µ–∑ auth
    await page.goto('/');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ login
    await page.waitForURL('/login');
    await expect(page.getByRole('heading', { name: 'Sign In' })).toBeVisible();
    
    console.log('‚úÖ Redirect to login works correctly!');
  });
  
  test('Different user types can authenticate', async ({ page }) => {
    const userTypes = ['regular', 'admin', 'manager'];
    
    for (const userType of userTypes) {
      console.log(`üîê Testing auth for user type: ${userType}`);
      
      const testUser = generateTestUser(`${userType}-test`);
      testUser.type = userType;
      
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ sessions
      await clearTestAuth(page);
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º auth –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞
      await setupTestAuth(page, testUser);
      await navigateWithAuth(page, '/');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç
      await expect(page.getByTestId('chat-input')).toBeVisible();
      
      console.log(`‚úÖ Auth successful for ${userType} user`);
    }
  });
});