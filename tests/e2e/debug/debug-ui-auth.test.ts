/**
 * @file tests/e2e/debug/debug-ui-auth.test.ts
 * @description Debug —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */

import { test, expect } from '@playwright/test'
import { universalAuthentication } from '../../helpers/auth.helper'
import { verifyUIAuthentication } from '../../helpers/ui-auth-verification'

test.describe('UI Authentication Debug', () => {
  test('Debug UI authentication detection', async ({ page }) => {
    console.log('üîç Starting UI authentication debug...')
    
    const testUser = {
      email: `debug-ui-${Date.now()}@test.com`,
      id: crypto.randomUUID()
    }
    
    console.log('üöÄ User data:', testUser)
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º universalAuthentication
    await universalAuthentication(page, testUser)
    console.log('‚úÖ universalAuthentication completed')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
    const currentUrl = page.url()
    console.log(`üìç Current URL: ${currentUrl}`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ header –≤–∏–¥–∏–º
    await expect(page.locator('[data-testid="header"]')).toBeVisible({ timeout: 10000 })
    console.log('‚úÖ Header is visible')
    
    // –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    console.log('üîç Running detailed UI authentication check...')
    const uiAuthResult = await verifyUIAuthentication(page, { timeout: 5000, verbose: true })
    
    console.log('üìä UI Authentication Result:', uiAuthResult)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üîç Additional debug checks...')
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º FastSessionProvider —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const sessionProviderLogs = await page.evaluate(() => {
      // –ü–æ–ª—É—á–∏–º –≤—Å–µ console –ª–æ–≥–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å FastSessionProvider
      return {
        cookies: document.cookie,
        cookieCount: document.cookie.split(';').filter(c => c.trim().length > 0).length,
        hasTestSession: document.cookie.includes('test-session'),
        windowDefined: typeof window !== 'undefined',
        documentDefined: typeof document !== 'undefined'
      }
    })
    
    console.log('üîç Session provider state:', sessionProviderLogs)
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ sidebar
    const sidebarElementCount = await page.locator('[data-sidebar] button').count()
    console.log(`üîç Sidebar button count: ${sidebarElementCount}`)
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ testid —ç–ª–µ–º–µ–Ω—Ç—ã –≤ sidebar
    const sidebarTestIds = await page.locator('[data-sidebar] [data-testid]').allTextContents()
    console.log('üîç Sidebar testid elements:', sidebarTestIds)
    
    console.log('‚úÖ UI authentication debug completed')
  })
})