/**
 * @file tests/helpers/sidebar-page.ts
 * @description Page Object Model –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –î–æ–∫—Ç—Ä–∏–Ω–µ WelcomeCraft
 * @version 1.0.0
 * @date 2025-06-19
 * @updated –°–æ–∑–¥–∞–Ω–∏–µ POM –∫–ª–∞—Å—Å–∞ –¥–ª—è sidebar —Å –Ω–æ–≤—ã–º–∏ testid
 */

/** HISTORY:
 * v1.0.0 (2025-06-19): –ù–∞—á–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–æ–≤—ã—Ö testid –∏–∑ app-sidebar.tsx
 */

import type { Page, Locator } from '@playwright/test'
import { TestUtils } from './test-utils'

/**
 * @description Page Object Model –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @feature –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö testid –∏–∑ schema –î–æ–∫—Ç—Ä–∏–Ω—ã WelcomeCraft
 * @feature Fail-fast –ª–æ–∫–∞—Ç–æ—Ä—ã —Å 2-—Å–µ–∫—É–Ω–¥–Ω—ã–º timeout
 * @feature Fallback —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
export class SidebarPage {
  private testUtils: TestUtils

  constructor(private page: Page) {
    this.testUtils = new TestUtils(page)
  }

  // ===== –û–°–ù–û–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ =====

  /**
   * @description –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞ (collapse/expand)
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ toggle
   */
  async getToggleButton(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-toggle-button')
  }

  /**
   * @description –°–µ–∫—Ü–∏—è AI —á–∞—Ç–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ
   * @returns –õ–æ–∫–∞—Ç–æ—Ä —Å–µ–∫—Ü–∏–∏ —á–∞—Ç–æ–≤
   */
  async getChatSection(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-chat-section')
  }

  /**
   * @description –ö–Ω–æ–ø–∫–∞ —Å–µ–∫—Ü–∏–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   */
  async getArtifactsButton(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-artifacts-button')
  }

  /**
   * @description –ö–Ω–æ–ø–∫–∞ "–í—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   */
  async getAllArtifactsButton(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-all-artifacts-button')
  }

  // ===== –≠–õ–ï–ú–ï–ù–¢–´ –ß–ê–¢–û–í =====

  /**
   * @description –≠–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ
   * @returns –ú–∞—Å—Å–∏–≤ –ª–æ–∫–∞—Ç–æ—Ä–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–∞—Ç–æ–≤
   */
  async getChatItems(): Promise<Locator[]> {
    const items = await this.page.locator('[data-testid="sidebar-chat-item"]').all()
    return items
  }

  /**
   * @description –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞
   * @param chatIndex - –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ (0-based)
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
   */
  async getChatMenuButton(chatIndex = 0): Promise<Locator> {
    const chatItems = await this.getChatItems()
    if (chatIndex >= chatItems.length) {
      throw new Error(`Chat index ${chatIndex} out of range (${chatItems.length} chats available)`)
    }
    return chatItems[chatIndex].locator('[data-testid="sidebar-chat-menu-button"]')
  }

  /**
   * @description –î–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
   */
  async getChatRenameAction(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-chat-rename-action')
  }

  /**
   * @description –ü–æ–¥–º–µ–Ω—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–∞—Ç–∞
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –ø–æ–¥–º–µ–Ω—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
   */
  async getChatShareMenu(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-chat-share-menu')
  }

  /**
   * @description –î–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞
   * @returns –õ–æ–∫–∞—Ç–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞–ª–µ–Ω–∏—è
   */
  async getChatDeleteAction(): Promise<Locator> {
    return await this.testUtils.fastLocator('sidebar-chat-delete-action')
  }

  // ===== –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–´–ï –î–ï–ô–°–¢–í–ò–Ø =====

  /**
   * @description –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∞–π–¥–±–∞—Ä–∞ (collapse/expand)
   * @feature Graceful degradation –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
   */
  async toggleSidebar(): Promise<void> {
    try {
      const toggleButton = await this.getToggleButton()
      await toggleButton.click()
      console.log('‚úÖ Sidebar toggled successfully')
    } catch (error) {
      console.log('‚ö†Ô∏è Sidebar toggle button not found, but continuing')
    }
  }

  /**
   * @description –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–µ–∫—Ü–∏–∏ —á–∞—Ç–æ–≤
   * @feature Fail-fast —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
   */
  async navigateToChats(): Promise<void> {
    try {
      const chatSection = await this.getChatSection()
      await chatSection.click()
      console.log('‚úÖ Navigated to chat section')
    } catch (error) {
      console.log('‚ùå Failed to navigate to chat section:', error)
      throw error
    }
  }

  /**
   * @description –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–µ–∫—Ü–∏–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * @feature Fail-fast —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
   */
  async navigateToArtifacts(): Promise<void> {
    try {
      const artifactsButton = await this.getArtifactsButton()
      await artifactsButton.click()
      console.log('‚úÖ Navigated to artifacts section')
    } catch (error) {
      console.log('‚ùå Failed to navigate to artifacts section:', error)
      throw error
    }
  }

  /**
   * @description –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * @feature –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
   */
  async navigateToAllArtifacts(): Promise<void> {
    try {
      const allArtifactsButton = await this.getAllArtifactsButton()
      await allArtifactsButton.click()
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
      await this.page.waitForURL('**/artifacts', { timeout: 5000 })
      console.log('‚úÖ Navigated to all artifacts page')
    } catch (error) {
      console.log('‚ùå Failed to navigate to all artifacts page:', error)
      throw error
    }
  }

  /**
   * @description –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —á–∞—Ç–∞
   * @param chatIndex - –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ
   * @feature –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
   */
  async openChatMenu(chatIndex = 0): Promise<void> {
    try {
      const menuButton = await this.getChatMenuButton(chatIndex)
      await menuButton.click()
      
      // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
      await this.testUtils.fastLocator('sidebar-chat-rename-action')
      console.log(`‚úÖ Opened chat menu for chat #${chatIndex}`)
    } catch (error) {
      console.log(`‚ùå Failed to open chat menu for chat #${chatIndex}:`, error)
      throw error
    }
  }

  /**
   * @description –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —á–∞—Ç —á–µ—Ä–µ–∑ –º–µ–Ω—é
   * @param chatIndex - –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞
   * @feature –ü–æ–ª–Ω—ã–π workflow –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
   */
  async renameChat(chatIndex = 0): Promise<void> {
    try {
      await this.openChatMenu(chatIndex)
      
      const renameAction = await this.getChatRenameAction()
      await renameAction.click()
      
      console.log(`‚úÖ Initiated rename for chat #${chatIndex}`)
    } catch (error) {
      console.log(`‚ùå Failed to rename chat #${chatIndex}:`, error)
      throw error
    }
  }

  /**
   * @description –£–¥–∞–ª–∏—Ç—å —á–∞—Ç —á–µ—Ä–µ–∑ –º–µ–Ω—é
   * @param chatIndex - –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞
   * @feature –ü–æ–ª–Ω—ã–π workflow —É–¥–∞–ª–µ–Ω–∏—è
   */
  async deleteChat(chatIndex = 0): Promise<void> {
    try {
      await this.openChatMenu(chatIndex)
      
      const deleteAction = await this.getChatDeleteAction()
      await deleteAction.click()
      
      console.log(`‚úÖ Initiated delete for chat #${chatIndex}`)
    } catch (error) {
      console.log(`‚ùå Failed to delete chat #${chatIndex}:`, error)
      throw error
    }
  }

  // ===== –ò–ù–§–û–†–ú–ê–¶–ò–û–ù–ù–´–ï –ú–ï–¢–û–î–´ =====

  /**
   * @description –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ
   * @returns –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Ç–æ–≤
   */
  async getChatCount(): Promise<number> {
    try {
      const chatItems = await this.getChatItems()
      console.log(`üìä Found ${chatItems.length} chats in sidebar`)
      return chatItems.length
    } catch (error) {
      console.log('‚ö†Ô∏è Could not count chats, returning 0')
      return 0
    }
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å —Å–µ–∫—Ü–∏–π —Å–∞–π–¥–±–∞—Ä–∞
   * @returns –°—Ç–∞—Ç—É—Å –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
   */
  async getSidebarStatus(): Promise<{
    toggleButton: boolean
    chatSection: boolean
    artifactsSection: boolean
    allArtifactsButton: boolean
  }> {
    const status = {
      toggleButton: false,
      chatSection: false,
      artifactsSection: false,
      allArtifactsButton: false
    }

    try {
      status.toggleButton = await (await this.getToggleButton()).isVisible()
    } catch { /* ignore */ }

    try {
      status.chatSection = await (await this.getChatSection()).isVisible()
    } catch { /* ignore */ }

    try {
      status.artifactsSection = await (await this.getArtifactsButton()).isVisible()
    } catch { /* ignore */ }

    try {
      status.allArtifactsButton = await (await this.getAllArtifactsButton()).isVisible()
    } catch { /* ignore */ }

    console.log('üìã Sidebar status:', status)
    return status
  }
}

// END OF: tests/helpers/sidebar-page.ts