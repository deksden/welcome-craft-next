// tests/helpers/e2e-auth.helper.ts

import type { Page } from '@playwright/test';

/**
 * @description –ù–∞–¥–µ–∂–Ω–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è E2E-—Ç–µ—Å—Ç–æ–≤.
 * @feature –†–µ–∞–ª–∏–∑—É–µ—Ç "Multi-Domain Cookie Pattern" –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –º—É–ª—å—Ç–∏–¥–æ–º–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ.
 */
export async function fastAuthentication(
  page: Page,
  user: { email: string; id?: string; name?: string }
): Promise<void> {
  console.log(`üöÄ FAST AUTHENTICATION: Setting up test session for ${user.email}`);

  const timestamp = Date.now();
  const userId = user.id || `test-user-${timestamp}`;
  const userName = user.name || user.email.split('@')[0];

  const cookieValue = JSON.stringify({
    user: { id: userId, email: user.email, name: userName },
    expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),
  });

  // –®–ê–ì 1: –°–ù–ê–ß–ê–õ–ê —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookies –ë–ï–ó navigation
  await page.context().addCookies([
    { name: 'test-session', value: cookieValue, domain: '.localhost', path: '/' },
    { name: 'test-session-fallback', value: cookieValue, domain: 'localhost', path: '/' },
    { name: 'test-session', value: cookieValue, domain: 'app.localhost', path: '/' },
  ]);

  // –®–ê–ì 2: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º test environment header
  await page.setExtraHTTPHeaders({ 'X-Test-Environment': 'playwright' });

  console.log('‚úÖ Fast authentication cookies and headers set.');
}