/**
 * @file tests/helpers/test-config.ts
 * @description –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤ - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤, –¥–æ–º–µ–Ω–æ–≤ –∏ URL
 * @version 1.0.0
 * @date 2025-06-15
 */

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Ä—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Playwright
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ environment variable, —Ç–∞–∫ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
 */
export function getTestPort(): number {
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º PLAYWRIGHT_PORT (—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ playwright.config.ts)
  if (process.env.PLAYWRIGHT_PORT) {
    const envPort = Number.parseInt(process.env.PLAYWRIGHT_PORT, 10);
    if (!Number.isNaN(envPort)) {
      return envPort;
    }
  }

  // 2. Fallback –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –ø–æ—Ä—Ç—É –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  return 3000;
}

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –º—É–ª—å—Ç–∏–¥–æ–º–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */
export interface TestDomainConfig {
  /** –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Å–∞–π—Ç–∞ */
  public: string;
  /** –î–æ–º–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ */
  admin: string;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–æ–º–µ–Ω–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
export function getTestDomains(): TestDomainConfig {
  const port = getTestPort();
  
  // Check if we're in real production (not local production testing)
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í Playwright —Ç–µ—Å—Ç–∞—Ö –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã
  const isRealProduction = process.env.NODE_ENV === 'production' && 
                          !process.env.PLAYWRIGHT_USE_PRODUCTION && 
                          !process.env.PLAYWRIGHT_PORT &&
                          !isPlaywrightEnvironment();
  
  if (isRealProduction) {
    return {
      public: 'welcome-onboard.ru', // Real production domain
      admin: 'app.welcome-onboard.ru' // Real production admin domain
    };
  }

  // For local development and local production testing
  return {
    public: `localhost:${port}`,
    admin: `app.localhost:${port}`
  };
}

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è URL –¥–ª—è —Ç–µ—Å—Ç–æ–≤
 */
export interface TestUrlConfig {
  /** –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Å–∞–π—Ç–∞ */
  publicBase: string;
  /** –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ */
  adminBase: string;
  /** URL –¥–ª—è health check */
  ping: string;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é URL –¥–ª—è —Ç–µ—Å—Ç–æ–≤
 */
export function getTestUrls(): TestUrlConfig {
  const port = getTestPort();
  const domains = getTestDomains();
  
  // Check if we're in real production (not local production testing)
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –í Playwright —Ç–µ—Å—Ç–∞—Ö –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã
  const isRealProduction = process.env.NODE_ENV === 'production' && 
                          !process.env.PLAYWRIGHT_USE_PRODUCTION && 
                          !process.env.PLAYWRIGHT_PORT &&
                          !isPlaywrightEnvironment();
  const protocol = isRealProduction ? 'https' : 'http';
  
  return {
    publicBase: `${protocol}://${domains.public}`,
    adminBase: `${protocol}://${domains.admin}`,
    ping: `${protocol}://${domains.public}/api/ping`
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export function getTestHeaders(): Record<string, string> {
  return {
    'X-Test-Environment': 'playwright'
  };
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Ç–µ—Å—Ç –≤ Playwright –æ–∫—Ä—É–∂–µ–Ω–∏–∏
 */
export function isPlaywrightEnvironment(): boolean {
  return process.env.PLAYWRIGHT === 'True' || 
         process.env.CI === 'true' ||
         !!process.env.PLAYWRIGHT_PORT;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ cookie –¥–ª—è –º—É–ª—å—Ç–∏–¥–æ–º–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */
export function getCookieConfig() {
  const domains = getTestDomains();
  
  return {
    // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º .localhost —á—Ç–æ–±—ã cookie —Ä–∞–±–æ—Ç–∞–ª–∏ –º–µ–∂–¥—É –¥–æ–º–µ–Ω–∞–º–∏
    domain: process.env.NODE_ENV === 'development' ? '.localhost' : undefined,
    httpOnly: true,
    sameSite: 'lax' as const,
    path: '/',
    secure: process.env.NODE_ENV === 'production'
  };
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π URL –≤ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
 */
export function getAdminUrl(path: string): string {
  const urls = getTestUrls();
  return `${urls.adminBase}${path.startsWith('/') ? path : `/${path}`}`;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π URL –≤ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Å–∞–π—Ç–∞
 */
export function getPublicUrl(path: string): string {
  const urls = getTestUrls();
  return `${urls.publicBase}${path.startsWith('/') ? path : `/${path}`}`;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Chrome launcher —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π app.localhost
 */
export function getChromeConfig() {
  const port = getTestPort();
  
  return {
    args: [
      `--host-resolver-rules=MAP app.localhost:* 127.0.0.1:${port}`,
      '--disable-features=VizDisplayCompositor',
      '--no-sandbox'
    ]
  };
}

/**
 * –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */
export function logTestConfig(): void {
  const port = getTestPort();
  const domains = getTestDomains();
  const urls = getTestUrls();
  
  console.log('üîß Test Configuration:');
  console.log(`   Port: ${port}`);
  console.log(`   Public Domain: ${domains.public}`);
  console.log(`   Admin Domain: ${domains.admin}`);
  console.log(`   Public Base URL: ${urls.publicBase}`);
  console.log(`   Admin Base URL: ${urls.adminBase}`);
  console.log(`   Ping URL: ${urls.ping}`);
  console.log(`   Is Playwright: ${isPlaywrightEnvironment()}`);
}