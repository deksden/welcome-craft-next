/**
 * @file tests/helpers/ui-auth-verification.ts
 * @description Helper –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ UI
 * @version 1.0.0
 * @date 2025-06-28
 * @updated –°–æ–∑–¥–∞–Ω helper –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä–∫–∞ "–ú–æ–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã" –∏ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

/** HISTORY:
 * v1.0.0 (2025-06-28): –°–æ–∑–¥–∞–Ω helper –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä–∫–∞ "–ú–æ–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã" –∏ –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

import { type Page, expect } from '@playwright/test'

/**
 * @description –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export interface UIAuthVerificationResult {
  /** –£—Å–ø–µ—à–Ω–∞ –ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è UI */
  isAuthenticated: boolean
  /** –í–∏–¥–Ω–∞ –ª–∏ —Å–µ–∫—Ü–∏—è "–ú–æ–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã" –≤ —Å–∞–π–¥–±–∞—Ä–µ */
  hasArtifactsSection: boolean
  /** –í–∏–¥–µ–Ω –ª–∏ –∞–≤–∞—Ç–∞—Ä/–∫–Ω–æ–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ header */
  hasUserAvatar: boolean
  /** –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */
  authElementsCount: number
  /** –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ */
  details: string[]
}

/**
 * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ UI
 * @param page - Playwright Page –æ–±—ä–µ–∫—Ç
 * @param options - –û–ø—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @feature –ü—Ä–æ–≤–µ—Ä—è–µ—Ç "–ú–æ–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã" –≤ —Å–∞–π–¥–±–∞—Ä–µ
 * @feature –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤–∞—Ç–∞—Ä/–∫–Ω–æ–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ header
 * @feature –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 * @deterministic –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è UI
 */
export async function verifyUIAuthentication(
  page: Page,
  options: {
    /** –¢–∞–π–º–∞—É—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5000ms) */
    timeout?: number
    /** –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª—å */
    verbose?: boolean
  } = {}
): Promise<UIAuthVerificationResult> {
  const { timeout = 5000, verbose = true } = options
  const details: string[] = []
  
  if (verbose) {
    console.log('üîç UI Authentication Verification: Starting visual auth check...')
  }
  
  // ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°–µ–∫—Ü–∏—è "–ú–æ–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã" –≤ —Å–∞–π–¥–±–∞—Ä–µ =====
  let hasArtifactsSection = false
  try {
    if (verbose) console.log('  üîç Looking for sidebar artifacts button...')
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ —Å–∞–π–¥–±–∞—Ä–µ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤–µ—Ä–Ω—É—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    const artifactsButton = await page.locator('[data-testid="sidebar-artifacts-button"]')
      .isVisible({ timeout })
      .catch(() => false)
    
    if (artifactsButton) {
      hasArtifactsSection = true
      details.push('‚úÖ Sidebar artifacts button found')
      if (verbose) console.log('  ‚úÖ Sidebar artifacts section detected')
    } else {
      if (verbose) console.log('  üîç Sidebar artifacts button not found, trying text search...')
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É "–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"
      const artifactsText = await page.locator('text="–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã"')
        .first()
        .isVisible({ timeout: 2000 })
        .catch(() => false)
      
      if (artifactsText) {
        hasArtifactsSection = true
        details.push('‚úÖ Artifacts text found in sidebar')
        if (verbose) console.log('  ‚úÖ Artifacts text found in UI')
      } else {
        if (verbose) console.log('  üîç Text search failed, trying BoxIcon...')
        
        // –ü–æ–∏—Å–∫ –ø–æ –∏–∫–æ–Ω–∫–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ (BoxIcon)
        const boxIcon = await page.locator('svg').filter({ hasText: '' })
          .first()
          .isVisible({ timeout: 1000 })
          .catch(() => false)
          
        if (boxIcon) {
          hasArtifactsSection = true
          details.push('‚úÖ Box icon found (likely artifacts section)')
          if (verbose) console.log('  ‚úÖ Box icon detected')
        } else {
          details.push('‚ùå No artifacts section found in sidebar')
          if (verbose) console.log('  ‚ùå Artifacts section not found')
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
          if (verbose) {
            const sidebarContent = await page.locator('[data-sidebar]').textContent().catch(() => 'NO SIDEBAR')
            console.log('  üîç Full sidebar content:', sidebarContent)
          }
        }
      }
    }
  } catch (error) {
    details.push(`‚ùå Artifacts section check failed: ${error}`)
    if (verbose) console.log('  ‚ùå Artifacts section check failed:', error)
  }
  
  // ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ê–≤–∞—Ç–∞—Ä/–∫–Ω–æ–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ header =====
  let hasUserAvatar = false
  try {
    if (verbose) console.log('  üîç Looking for user avatar/button in header...')
    
    // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ header
    const userElements = [
      '[data-testid="header-user-button"]',
      '[data-testid="user-avatar"]', 
      '[data-testid="header-user-menu"]',
      'button[aria-label*="user"], button[aria-label*="User"]',
      'img[alt*="avatar"], img[alt*="Avatar"]',
      // –ß–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      'button:has(img)', // –∫–Ω–æ–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º (–∞–≤–∞—Ç–∞—Ä)
      '[role="button"]:has(img)', // –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å —Ä–æ–ª—å—é –∫–Ω–æ–ø–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    ]
    
    for (const selector of userElements) {
      const element = await page.locator(selector)
        .first()
        .isVisible({ timeout: 1000 })
        .catch(() => false)
      
      if (element) {
        hasUserAvatar = true
        details.push(`‚úÖ User element found: ${selector}`)
        if (verbose) console.log(`  ‚úÖ User element found: ${selector}`)
        break
      }
    }
    
    if (!hasUserAvatar) {
      if (verbose) console.log('  üîç User element not found, checking header content...')
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –≤ header –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
      const headerContent = await page.locator('[data-testid="header"]')
        .textContent()
        .catch(() => '')
      
      if (headerContent && (headerContent.includes('@') || headerContent.includes('User'))) {
        hasUserAvatar = true
        details.push('‚úÖ User content found in header text')
        if (verbose) console.log('  ‚úÖ User content detected in header')
      } else {
        details.push('‚ùå No user avatar/button found in header')
        if (verbose) console.log('  ‚ùå User avatar/button not found')
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        if (verbose) {
          console.log('  üîç Full header content:', headerContent || 'NO HEADER CONTENT')
          
          // –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ header
          const buttonCount = await page.locator('[data-testid="header"] button').count().catch(() => 0)
          console.log(`  üîç Total buttons in header: ${buttonCount}`)
        }
      }
    }
  } catch (error) {
    details.push(`‚ùå User avatar check failed: ${error}`)
    if (verbose) console.log('  ‚ùå User avatar check failed:', error)
  }
  
  // ===== –ü–æ–¥—Å—á–µ—Ç –∏ –∏—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ =====
  const authElementsCount = (hasArtifactsSection ? 1 : 0) + (hasUserAvatar ? 1 : 0)
  const isAuthenticated = authElementsCount >= 1 // –•–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–∏–∑–Ω–∞–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  
  const result: UIAuthVerificationResult = {
    isAuthenticated,
    hasArtifactsSection,
    hasUserAvatar,
    authElementsCount,
    details
  }
  
  if (verbose) {
    console.log('üîç UI Authentication Verification Results:')
    console.log(`  üìä Authenticated: ${isAuthenticated ? '‚úÖ YES' : '‚ùå NO'}`)
    console.log(`  üìã Artifacts Section: ${hasArtifactsSection ? '‚úÖ' : '‚ùå'}`)
    console.log(`  üë§ User Avatar: ${hasUserAvatar ? '‚úÖ' : '‚ùå'}`)
    console.log(`  üéØ Auth Elements: ${authElementsCount}/2`)
    
    if (!isAuthenticated) {
      console.log('‚ö†Ô∏è UI shows NO SIGNS of authentication - user appears as guest')
      details.forEach(detail => console.log(`     ${detail}`))
    }
  }
  
  return result
}

/**
 * @description –û–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ UI —Å —Ä–µ—Ç—Ä–∞—è–º–∏
 * @param page - Playwright Page –æ–±—ä–µ–∫—Ç
 * @param options - –û–ø—Ü–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
 * @returns Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @feature –ü–æ–≤—Ç–æ—Ä—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –¥–æ —É—Å–ø–µ—Ö–∞ –∏–ª–∏ —Ç–∞–π–º–∞—É—Ç–∞
 * @feature –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
 */
export async function waitForUIAuthentication(
  page: Page,
  options: {
    /** –û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 15000ms) */
    maxTimeout?: number
    /** –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2000ms) */
    retryInterval?: number
    /** –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å */
    verbose?: boolean
  } = {}
): Promise<UIAuthVerificationResult> {
  const { maxTimeout = 15000, retryInterval = 2000, verbose = true } = options
  const startTime = Date.now()
  
  if (verbose) {
    console.log('‚è≥ Waiting for UI authentication signs...')
  }
  
  while (Date.now() - startTime < maxTimeout) {
    const result = await verifyUIAuthentication(page, { timeout: 1000, verbose: false })
    
    if (result.isAuthenticated) {
      if (verbose) {
        console.log(`‚úÖ UI authentication detected after ${Date.now() - startTime}ms`)
        console.log('  üìä Final verification:', result)
      }
      return result
    }
    
    if (verbose) {
      console.log(`‚è≥ Still waiting... (${Date.now() - startTime}ms/${maxTimeout}ms)`)
    }
    
    await page.waitForTimeout(retryInterval)
  }
  
  // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–æ–ª–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  const finalResult = await verifyUIAuthentication(page, { timeout: 2000, verbose: true })
  
  if (verbose) {
    console.log('‚ùå UI authentication timeout reached')
    console.log('üìä Final state diagnosis:')
    finalResult.details.forEach(detail => console.log(`     ${detail}`))
  }
  
  return finalResult
}

/**
 * @description –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ UI –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ assertions
 * @param page - Playwright Page –æ–±—ä–µ–∫—Ç
 * @param options - –û–ø—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @feature –ò—Å–ø–æ–ª—å–∑—É–µ—Ç expect() assertions –¥–ª—è —Å—Ç—Ä–æ–≥–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @feature –ü–∞–¥–∞–µ—Ç –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @throws AssertionError –µ—Å–ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤ UI
 */
export async function assertUIAuthentication(
  page: Page,
  options: {
    /** –¢–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ */
    timeout?: number
    /** –¢—Ä–µ–±–æ–≤–∞—Ç—å –ª–∏ –û–ë–ê –ø—Ä–∏–∑–Ω–∞–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */
    requireBoth?: boolean
  } = {}
): Promise<void> {
  const { timeout = 10000, requireBoth = false } = options
  
  console.log('üîí STRICT UI Authentication Assertion')
  
  const result = await waitForUIAuthentication(page, { 
    maxTimeout: timeout, 
    verbose: true 
  })
  
  // –°—Ç—Ä–æ–≥–∏–µ assertions
  expect(result.isAuthenticated).toBe(true)
  
  if (requireBoth) {
    expect(result.hasArtifactsSection).toBe(true)
    expect(result.hasUserAvatar).toBe(true)
    console.log('‚úÖ STRICT: Both artifacts section AND user avatar confirmed')
  } else {
    expect(result.authElementsCount).toBeGreaterThanOrEqual(1)
    console.log('‚úÖ STRICT: At least one authentication sign confirmed')
  }
  
  console.log('üîí UI Authentication assertion passed')
}

// END OF: tests/helpers/ui-auth-verification.ts