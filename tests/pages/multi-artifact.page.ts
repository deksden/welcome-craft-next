/**
 * @file tests/helpers/multi-artifact-page.ts
 * @description Page Object Model –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
 * @version 1.0.0
 * @date 2025-06-19
 * @updated –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è TASK-07: UC-05 Multi-Artifact Creation
 */

/** HISTORY:
 * v1.0.0 (2025-06-19): –ù–∞—á–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è POM –¥–ª—è Multi-Artifact Creation workflow
 */

import type { Page, Locator } from '@playwright/test'
import { expect } from '@playwright/test'

/**
 * @description –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∞–π—Ç–∞ —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏
 */
export interface SiteIntegrationConfig {
  heroSlot: string
  contactsSlot: string  
  linksSlot: string
}

/**
 * @description Page Object Model –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
 * 
 * @feature –ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ UI –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å multi-artifact workflow
 * @feature –ü—Ä–æ–≤–µ—Ä–∫–∞ sequential creation –∏ auto-linking
 * @feature Performance –∏ error handling testing
 */
export class MultiArtifactPage {
  constructor(private page: Page) {}

  // ===== –°–ï–õ–ï–ö–¢–û–†–´ =====

  /** –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ */
  get newChatButton(): Locator {
    return this.page.getByTestId('header-new-chat-button')
  }

  /** –ü–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞ */
  get chatInput(): Locator {
    return this.page.getByTestId('chat-input-textarea')
  }

  /** –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è */
  get sendButton(): Locator {
    return this.page.getByTestId('chat-input-send-button')
  }

  /** –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ */
  get chatMessages(): Locator {
    return this.page.getByTestId('chat-message')
  }

  /** –í—Å–µ –ø—Ä–µ–≤—å—é –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ —á–∞—Ç–µ */
  get artifactPreviews(): Locator {
    return this.page.getByTestId('artifact-preview')
  }

  /** Loading –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */
  get loadingIndicators(): Locator {
    return this.page.locator('.animate-spin, [data-testid*="skeleton"]')
  }

  /** –ü–∞–Ω–µ–ª—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */
  get artifactPanel(): Locator {
    return this.page.getByTestId('artifact-panel')
  }

  /** Site editor */
  get siteEditor(): Locator {
    return this.page.getByTestId('site-editor')
  }

  // ===== –ú–ï–¢–û–î–´ –ù–ê–í–ò–ì–ê–¶–ò–ò =====

  /**
   * @description –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —á–∞—Ç
   */
  async createNewChat(): Promise<void> {
    await this.newChatButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞
    await this.page.waitForURL(/.*\/chat.*/)
    await this.chatInput.waitFor({ state: 'visible' })
  }

  /**
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * 
   * @param request - –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è AI
   */
  async sendComplexRequest(request: string): Promise<void> {
    await this.chatInput.fill(request)
    await this.sendButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await this.page.waitForTimeout(1000)
  }

  // ===== –ú–ï–¢–û–î–´ –ü–†–û–í–ï–†–ö–ò –°–û–ó–î–ê–ù–ò–Ø –ê–†–¢–ï–§–ê–ö–¢–û–í =====

  /**
   * @description –û–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º
   * 
   * @param artifactNumber - –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   * @param expectedKind - –û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   * @param titleKeyword - –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   * @returns ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   */
  async waitForArtifactCreation(
    artifactNumber: number, 
    expectedKind: string, 
    titleKeyword: string
  ): Promise<string> {
    console.log(`‚è≥ Waiting for artifact ${artifactNumber} (${expectedKind}) with keyword: ${titleKeyword}`)
    
    // –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    await this.page.waitForFunction(
      (count) => document.querySelectorAll('[data-testid="artifact-preview"]').length >= count,
      artifactNumber,
      { timeout: 60000 }
    )
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
    const artifactPreview = this.artifactPreviews.nth(artifactNumber - 1)
    await artifactPreview.waitFor({ state: 'visible' })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    await expect(artifactPreview).toContainText(titleKeyword, { ignoreCase: true })
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
    const artifactId = await artifactPreview.getAttribute('data-artifact-id') ||
                      await artifactPreview.getAttribute('data-testid') ||
                      `artifact-${artifactNumber}`
    
    console.log(`‚úÖ Artifact ${artifactNumber} created: ${artifactId}`)
    return artifactId
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
   * 
   * @param artifactId - ID –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param keywords - –ú–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
   */
  async verifyArtifactContent(artifactId: string, ...keywords: string[]): Promise<void> {
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å
    const artifactPreview = this.page.locator(`[data-artifact-id="${artifactId}"]`).first()
    if (await artifactPreview.count() === 0) {
      // Fallback - –∏—â–µ–º –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
      const allPreviews = this.artifactPreviews
      const count = await allPreviews.count()
      for (let i = 0; i < count; i++) {
        const preview = allPreviews.nth(i)
        const text = await preview.textContent()
        if (text && keywords.some(keyword => text.toLowerCase().includes(keyword.toLowerCase()))) {
          await preview.click()
          break
        }
      }
    } else {
      await artifactPreview.click()
    }
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
    await this.artifactPanel.waitFor({ state: 'visible', timeout: 10000 })
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è loading indicators)
    await this.page.waitForFunction(() => {
      const skeletons = document.querySelectorAll('[data-testid*="skeleton"]')
      const spinners = document.querySelectorAll('.animate-spin')
      return skeletons.length === 0 && spinners.length === 0
    }, { timeout: 30000 })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    for (const keyword of keywords) {
      await expect(this.artifactPanel).toContainText(keyword, { 
        ignoreCase: true,
        timeout: 10000 
      })
    }
    
    console.log(`‚úÖ Artifact content verified: ${keywords.join(', ')}`)
  }

  // ===== –ú–ï–¢–û–î–´ –ü–†–û–í–ï–†–ö–ò –°–ê–ô–¢–ê =====

  /**
   * @description –û—Ç–∫—Ä—ã–≤–∞–µ—Ç site –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   * 
   * @param siteArtifactId - ID —Å–∞–π—Ç–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
   */
  async openSiteArtifact(siteArtifactId: string): Promise<void> {
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ site –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
    const sitePreview = this.page.locator(`[data-artifact-id="${siteArtifactId}"]`).first()
    if (await sitePreview.count() === 0) {
      // Fallback - –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç (–æ–±—ã—á–Ω–æ —ç—Ç–æ site)
      const lastPreview = this.artifactPreviews.last()
      await lastPreview.click()
    } else {
      await sitePreview.click()
    }
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ site editor
    await this.siteEditor.waitFor({ state: 'visible', timeout: 10000 })
    
    console.log(`üèóÔ∏è Site artifact opened`)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ —Å–∞–π—Ç
   * 
   * @param config - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞–µ–º–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   */
  async verifySiteIntegration(config: SiteIntegrationConfig): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ site editor –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    await expect(this.siteEditor).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–ª–æ–∫–æ–≤ —Å–∞–π—Ç–∞
    const heroBlock = this.page.getByTestId('site-block-hero')
    const contactsBlock = this.page.getByTestId('site-block-key-contacts')
    const linksBlock = this.page.getByTestId('site-block-useful-links')
    
    await heroBlock.waitFor({ state: 'visible', timeout: 10000 })
    await contactsBlock.waitFor({ state: 'visible', timeout: 10000 })
    await linksBlock.waitFor({ state: 'visible', timeout: 10000 })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–ª–æ–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    // (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –Ω–∞–ª–∏—á–∏–µ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
    await expect(heroBlock).not.toBeEmpty()
    await expect(contactsBlock).not.toBeEmpty()
    await expect(linksBlock).not.toBeEmpty()
    
    console.log(`‚úÖ Site integration verified`)
  }

  // ===== –ú–ï–¢–û–î–´ –ü–†–û–í–ï–†–ö–ò UX =====

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –≤–∏–¥–Ω—ã –≤ —á–∞—Ç–µ
   * 
   * @param artifactIds - –ú–∞—Å—Å–∏–≤ ID –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  async verifyAllArtifactsVisible(artifactIds: string[]): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    await expect(this.artifactPreviews).toHaveCount(artifactIds.length, { timeout: 10000 })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –≤–∏–¥–∏–º—ã
    for (let i = 0; i < artifactIds.length; i++) {
      const preview = this.artifactPreviews.nth(i)
      await expect(preview).toBeVisible()
    }
    
    console.log(`üëÄ All ${artifactIds.length} artifacts are visible`)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç responsive UI –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
   */
  async verifyUIResponsiveness(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–Ω–æ —Å–∫—Ä–æ–ª–ª–∏—Ç—å
    await this.page.mouse.wheel(0, 200)
    await this.page.waitForTimeout(500)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–Ω–æ–ø–∫–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã
    if (await this.newChatButton.isVisible()) {
      await expect(this.newChatButton).toBeEnabled()
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –º–æ–¥–∞–ª–æ–≤
    const blockingModals = this.page.locator('.modal-backdrop, .overlay')
    await expect(blockingModals).toHaveCount(0)
    
    console.log(`üì± UI responsiveness verified`)
  }

  /**
   * @description –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * 
   * @param artifactId - ID –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   * @param editRequest - –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
   */
  async testAdditionalEditing(artifactId: string, editRequest: string): Promise<void> {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    await this.chatInput.fill(editRequest)
    await this.sendButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
    await this.page.waitForTimeout(3000)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª–∞
    const messagesAfter = await this.chatMessages.count()
    if (messagesAfter === 0) {
      throw new Error('No response to additional editing request')
    }
    
    console.log(`‚úèÔ∏è Additional editing tested`)
  }

  // ===== –£–¢–ò–õ–ò–¢–´ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò =====

  /**
   * @description –û–∂–∏–¥–∞–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * 
   * @param expectedCount - –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   */
  async waitForAllArtifactsReady(expectedCount: number): Promise<void> {
    // –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    await this.page.waitForFunction(
      (count) => document.querySelectorAll('[data-testid="artifact-preview"]').length >= count,
      expectedCount,
      { timeout: 90000 }
    )
    
    // –û–∂–∏–¥–∞–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –≤—Å–µ—Ö loading indicators
    await this.page.waitForFunction(() => {
      const skeletons = document.querySelectorAll('[data-testid*="skeleton"]')
      const spinners = document.querySelectorAll('.animate-spin')
      return skeletons.length === 0 && spinners.length === 0
    }, { timeout: 60000 })
    
    console.log(`‚ö° All ${expectedCount} artifacts are ready`)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   */
  async verifyParallelContentLoading(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ
    const artifacts = this.artifactPreviews
    const count = await artifacts.count()
    
    for (let i = 0; i < count; i++) {
      const artifact = artifacts.nth(i)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç UI
      await artifact.click()
      await this.page.waitForTimeout(500)
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –µ—Å–ª–∏ –æ–Ω–∞ –æ—Ç–∫—Ä—ã–ª–∞—Å—å
      await this.page.keyboard.press('Escape')
      await this.page.waitForTimeout(500)
    }
    
    console.log(`üîÑ Parallel loading verified`)
  }

  // ===== –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö =====

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç graceful –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
   */
  async verifyErrorHandling(): Promise<void> {
    // –û–∂–∏–¥–∞–µ–º —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    await this.page.waitForTimeout(30000)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ UI –Ω–µ —Å–ª–æ–º–∞–ª—Å—è
    await expect(this.chatInput).toBeVisible()
    await expect(this.sendButton).toBeEnabled()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ response (–¥–∞–∂–µ –µ—Å–ª–∏ —Å –æ—à–∏–±–∫–æ–π)
    const messages = await this.chatMessages.count()
    if (messages === 0) {
      throw new Error('No AI response to complex request')
    }
    
    console.log(`üõ°Ô∏è Error handling verified`)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   */
  async verifyPartialSuccess(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞—Ä—Ç–µ—Ñ–∞–∫—Ç —Å–æ–∑–¥–∞–ª—Å—è
    const artifactCount = await this.artifactPreviews.count()
    if (artifactCount === 0) {
      throw new Error('No artifacts created at all')
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç
    if (artifactCount > 0) {
      const firstArtifact = this.artifactPreviews.first()
      await firstArtifact.click()
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è
      await this.artifactPanel.waitFor({ state: 'visible', timeout: 5000 })
    }
    
    console.log(`‚úÖ Partial success verified: ${artifactCount} artifacts created`)
  }
}

// END OF: tests/helpers/multi-artifact-page.ts