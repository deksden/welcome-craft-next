/**
 * @file tests/helpers/content-management-page.ts
 * @description Page Object Model –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
 * @version 1.0.0
 * @date 2025-06-19
 * @updated –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è TASK-08: UC-06 Content Management
 */

/** HISTORY:
 * v1.0.0 (2025-06-19): –ù–∞—á–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è POM –¥–ª—è Advanced Content Management
 */

import type { Page, Locator } from '@playwright/test'
import { expect } from '@playwright/test'

/**
 * @description –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
 */
export interface SearchFilters {
  contentType?: string
  createdDate?: string
  tags?: string
  contentContains?: string
}

/**
 * @description Page Object Model –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
 * 
 * @feature –ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ UI –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å advanced content features
 * @feature –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, AI enhancement, bulk –æ–ø–µ—Ä–∞—Ü–∏–∏
 * @feature Template management –∏ smart collections
 */
export class ContentManagementPage {
  constructor(private page: Page) {}

  // ===== –°–ï–õ–ï–ö–¢–û–†–´ =====

  /** –°—Å—ã–ª–∫–∞ –Ω–∞ Content Library */
  get contentLibraryLink(): Locator {
    return this.page.getByTestId('sidebar-content-library-link')
  }

  /** Grid view toggle */
  get gridViewButton(): Locator {
    return this.page.getByTestId('content-view-grid')
  }

  /** List view toggle */
  get listViewButton(): Locator {
    return this.page.getByTestId('content-view-list')
  }

  /** –í—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ */
  get artifactCards(): Locator {
    return this.page.getByTestId('artifact-card')
  }

  /** –ß–µ–∫–±–æ–∫—Å—ã –¥–ª—è multiple selection */
  get selectionCheckboxes(): Locator {
    return this.page.getByTestId('artifact-selection-checkbox')
  }

  /** Bulk actions toolbar */
  get bulkActionsToolbar(): Locator {
    return this.page.getByTestId('bulk-actions-toolbar')
  }

  /** Advanced search form */
  get advancedSearchForm(): Locator {
    return this.page.getByTestId('advanced-search-form')
  }

  /** Search results container */
  get searchResults(): Locator {
    return this.page.getByTestId('search-results')
  }

  /** Version history panel */
  get versionHistoryPanel(): Locator {
    return this.page.getByTestId('version-history-panel')
  }

  /** Version comparison view */
  get versionComparisonView(): Locator {
    return this.page.getByTestId('version-comparison-view')
  }

  /** AI enhancement menu */
  get aiEnhancementMenu(): Locator {
    return this.page.getByTestId('ai-enhancement-menu')
  }

  /** Enhancement preview dialog */
  get enhancementPreview(): Locator {
    return this.page.getByTestId('enhancement-preview-dialog')
  }

  /** Template library */
  get templateLibrary(): Locator {
    return this.page.getByTestId('template-library')
  }

  // ===== –ú–ï–¢–û–î–´ –ù–ê–í–ò–ì–ê–¶–ò–ò =====

  /**
   * @description –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ Content Library
   */
  async navigateToContentLibrary(): Promise<void> {
    await this.contentLibraryLink.click()
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    await this.page.waitForURL('**/artifacts')
    await this.artifactCards.first().waitFor({ state: 'visible', timeout: 10000 })
  }

  /**
   * @description –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –≤ grid view
   */
  async switchToGridView(): Promise<void> {
    await this.gridViewButton.click()
    await this.page.waitForTimeout(500) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
  }

  /**
   * @description –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –≤ list view
   */
  async switchToListView(): Promise<void> {
    await this.listViewButton.click()
    await this.page.waitForTimeout(500) // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
  }

  // ===== –ú–ï–¢–û–î–´ –í–ï–†–°–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø =====

  /**
   * @description –°–æ–∑–¥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–µ—Ä—Å–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   * 
   * @param artifactTitle - –ù–∞–∑–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   */
  async createArtifactVersions(artifactTitle: string): Promise<void> {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
    await this.selectArtifact(artifactTitle)
    
    // –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏—é 1 (—á–µ—Ä–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
    const editButton = this.page.getByTestId('artifact-edit-button')
    if (await editButton.isVisible()) {
      await editButton.click()
      
      // –î–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      const editor = this.page.getByTestId('artifact-editor')
      await editor.waitFor({ state: 'visible' })
      await this.page.keyboard.press('End')
      await this.page.keyboard.type(' - Updated v1')
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º (–∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–ª–∏ –∫–Ω–æ–ø–∫–∞)
      await this.page.waitForTimeout(3000) // –ñ–¥–µ–º –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    }
    
    // –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏—é 2
    await this.page.keyboard.press('End')
    await this.page.keyboard.type(' - Updated v2')
    await this.page.waitForTimeout(3000)
    
    console.log(`üìù Created multiple versions for: ${artifactTitle}`)
  }

  /**
   * @description –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π
   * 
   * @param artifactTitle - –ù–∞–∑–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   */
  async openVersionHistory(artifactTitle: string): Promise<void> {
    await this.selectArtifact(artifactTitle)
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π
    const historyButton = this.page.getByTestId('artifact-version-history-button')
    if (await historyButton.isVisible()) {
      await historyButton.click()
    } else {
      // Fallback - —á–µ—Ä–µ–∑ –º–µ–Ω—é
      const menuButton = this.page.getByTestId('artifact-menu-button')
      await menuButton.click()
      await this.page.getByText('Version History').click()
    }
    
    await this.versionHistoryPanel.waitFor({ state: 'visible' })
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–π
   */
  async verifyVersionHistoryDisplay(): Promise<void> {
    await expect(this.versionHistoryPanel).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–µ—Ä—Å–∏–π
    const versionItems = this.page.getByTestId('version-history-item')
    const versionCount = await versionItems.count()
    if (versionCount === 0) {
      throw new Error('No versions found in history')
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ timestamps
    const timestamps = this.page.getByTestId('version-timestamp')
    await expect(timestamps.first()).toBeVisible()
    
    console.log(`üìö Version history display verified`)
  }

  /**
   * @description –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–µ –≤–µ—Ä—Å–∏–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   * 
   * @param version1 - –ù–æ–º–µ—Ä –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–∏
   * @param version2 - –ù–æ–º–µ—Ä –≤—Ç–æ—Ä–æ–π –≤–µ—Ä—Å–∏–∏
   */
  async compareVersions(version1: number, version2: number): Promise<void> {
    // –í—ã–±–∏—Ä–∞–µ–º –≤–µ—Ä—Å–∏–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const version1Checkbox = this.page.getByTestId(`version-${version1}-checkbox`)
    const version2Checkbox = this.page.getByTestId(`version-${version2}-checkbox`)
    
    await version1Checkbox.click()
    await version2Checkbox.click()
    
    // –ö–ª–∏–∫–∞–µ–º compare
    const compareButton = this.page.getByTestId('compare-versions-button')
    await compareButton.click()
    
    await this.versionComparisonView.waitFor({ state: 'visible' })
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ diff –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏
   */
  async verifyVersionDiff(): Promise<void> {
    await expect(this.versionComparisonView).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ diff highlights
    const additions = this.page.locator('.diff-addition')
    const deletions = this.page.locator('.diff-deletion')
    
    // –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const hasChanges = (await additions.count()) > 0 || (await deletions.count()) > 0
    if (!hasChanges) {
      throw new Error('No diff changes detected in version comparison')
    }
    
    console.log(`üîç Version diff verified`)
  }

  // ===== –ú–ï–¢–û–î–´ AI ENHANCEMENT =====

  /**
   * @description –í—ã–±–∏—Ä–∞–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã
   * 
   * @param artifactTitle - –ù–∞–∑–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   */
  async selectArtifact(artifactTitle: string): Promise<void> {
    // –ò—â–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    const artifactCard = this.page.getByText(artifactTitle).first()
    await artifactCard.click()
    
    // –û–∂–∏–¥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
    await this.page.getByTestId('artifact-panel').waitFor({ state: 'visible' })
  }

  /**
   * @description –ü—Ä–∏–º–µ–Ω—è–µ—Ç AI enhancement –∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—É
   * 
   * @param enhancementType - –¢–∏–ø —É–ª—É—á—à–µ–Ω–∏—è
   */
  async enhanceWithAI(enhancementType: string): Promise<void> {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é AI enhancement
    const enhanceButton = this.page.getByTestId('artifact-ai-enhance-button')
    await enhanceButton.click()
    
    await this.aiEnhancementMenu.waitFor({ state: 'visible' })
    
    // –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø enhancement
    const enhanceOption = this.page.getByText(enhancementType)
    await enhanceOption.click()
    
    // –û–∂–∏–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ preview
    await this.enhancementPreview.waitFor({ state: 'visible', timeout: 30000 })
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç preview AI enhancement
   */
  async verifyAIEnhancementPreview(): Promise<void> {
    await expect(this.enhancementPreview).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ Accept/Reject
    const acceptButton = this.page.getByTestId('enhancement-accept-button')
    const rejectButton = this.page.getByTestId('enhancement-reject-button')
    
    await expect(acceptButton).toBeVisible()
    await expect(rejectButton).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ preview content
    const previewContent = this.page.getByTestId('enhancement-preview-content')
    await expect(previewContent).not.toBeEmpty()
    
    console.log(`ü§ñ AI enhancement preview verified`)
  }

  /**
   * @description –ü—Ä–∏–Ω–∏–º–∞–µ—Ç AI enhancement
   */
  async acceptEnhancement(): Promise<void> {
    const acceptButton = this.page.getByTestId('enhancement-accept-button')
    await acceptButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    await this.enhancementPreview.waitFor({ state: 'hidden' })
    await this.page.waitForTimeout(2000) // –í—Ä–µ–º—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  }

  /**
   * @description –û—Ç–∫–ª–æ–Ω—è–µ—Ç AI enhancement
   */
  async rejectEnhancement(): Promise<void> {
    const rejectButton = this.page.getByTestId('enhancement-reject-button')
    await rejectButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è preview
    await this.enhancementPreview.waitFor({ state: 'hidden' })
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–Ω–∞ –≤ enhancement
   */
  async verifyToneEnhancement(): Promise<void> {
    await this.verifyAIEnhancementPreview()
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
    const previewContent = this.page.getByTestId('enhancement-preview-content')
    const contentText = await previewContent.textContent()
    
    if (!contentText || contentText.trim().length === 0) {
      throw new Error('Enhancement preview is empty')
    }
    
    console.log(`üé≠ Tone enhancement verified`)
  }

  // ===== –ú–ï–¢–û–î–´ BULK OPERATIONS =====

  /**
   * @description –í—ã–±–∏—Ä–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   * 
   * @param count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
   */
  async selectMultipleArtifacts(count: number): Promise<void> {
    const checkboxes = this.selectionCheckboxes
    const availableCount = await checkboxes.count()
    const selectCount = Math.min(count, availableCount)
    
    for (let i = 0; i < selectCount; i++) {
      await checkboxes.nth(i).click()
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª—Å—è bulk toolbar
    await this.bulkActionsToolbar.waitFor({ state: 'visible' })
    
    console.log(`‚úÖ Selected ${selectCount} artifacts`)
  }

  /**
   * @description –ü—Ä–∏–º–µ–Ω—è–µ—Ç tag –∫ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º
   * 
   * @param tagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞
   */
  async applyBulkTag(tagName: string): Promise<void> {
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ bulk tag action
    const tagButton = this.page.getByTestId('bulk-action-tag')
    await tagButton.click()
    
    // –í–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞
    const tagInput = this.page.getByTestId('bulk-tag-input')
    await tagInput.fill(tagName)
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º
    const applyButton = this.page.getByTestId('bulk-tag-apply')
    await applyButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
    await this.page.waitForTimeout(2000)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Ç–µ–≥–∏ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å
   * 
   * @param tagName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  async verifyTagsApplied(tagName: string): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–≥–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞—Ö
    const tagElements = this.page.getByTestId('artifact-tag').filter({ hasText: tagName })
    const tagCount = await tagElements.count()
    
    if (tagCount === 0) {
      throw new Error(`Tag "${tagName}" not found on any artifacts`)
    }
    
    console.log(`üè∑Ô∏è Tag "${tagName}" applied to ${tagCount} artifacts`)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å bulk actions
   * 
   * @param expectedActions - –û–∂–∏–¥–∞–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
   */
  async verifyBulkActionsAvailable(expectedActions: string[]): Promise<void> {
    for (const action of expectedActions) {
      const actionButton = this.page.getByTestId(`bulk-action-${action}`)
      await expect(actionButton).toBeVisible()
    }
    
    console.log(`üîß Bulk actions verified: ${expectedActions.join(', ')}`)
  }

  // ===== –ú–ï–¢–û–î–´ –ü–û–ò–°–ö–ê =====

  /**
   * @description –û—Ç–∫—Ä—ã–≤–∞–µ—Ç advanced search
   */
  async openAdvancedSearch(): Promise<void> {
    const searchButton = this.page.getByTestId('advanced-search-button')
    await searchButton.click()
    
    await this.advancedSearchForm.waitFor({ state: 'visible' })
  }

  /**
   * @description –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
   * 
   * @param filters - –û–±—ä–µ–∫—Ç —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
   */
  async setSearchFilters(filters: SearchFilters): Promise<void> {
    if (filters.contentType) {
      const typeSelect = this.page.getByTestId('search-filter-content-type')
      await typeSelect.selectOption(filters.contentType)
    }
    
    if (filters.createdDate) {
      const dateSelect = this.page.getByTestId('search-filter-created-date')
      await dateSelect.selectOption(filters.createdDate)
    }
    
    if (filters.tags) {
      const tagsInput = this.page.getByTestId('search-filter-tags')
      await tagsInput.fill(filters.tags)
    }
    
    if (filters.contentContains) {
      const contentInput = this.page.getByTestId('search-filter-content')
      await contentInput.fill(filters.contentContains)
    }
  }

  /**
   * @description –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫
   */
  async executeSearch(): Promise<void> {
    const searchButton = this.page.getByTestId('execute-search-button')
    await searchButton.click()
    
    // –û–∂–∏–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    await this.searchResults.waitFor({ state: 'visible' })
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
   * 
   * @param expectedKeyword - –û–∂–∏–¥–∞–µ–º–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
   */
  async verifySearchResults(expectedKeyword: string): Promise<void> {
    await expect(this.searchResults).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    const resultsText = await this.searchResults.textContent()
    if (!resultsText?.toLowerCase().includes(expectedKeyword.toLowerCase())) {
      throw new Error(`Search results don't contain "${expectedKeyword}"`)
    }
    
    console.log(`üîç Search results verified for: ${expectedKeyword}`)
  }

  /**
   * @description –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∫–∞–∫ smart collection
   * 
   * @param collectionName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
   */
  async saveSearchAsCollection(collectionName: string): Promise<void> {
    const saveButton = this.page.getByTestId('save-search-as-collection')
    await saveButton.click()
    
    const nameInput = this.page.getByTestId('collection-name-input')
    await nameInput.fill(collectionName)
    
    const confirmButton = this.page.getByTestId('save-collection-confirm')
    await confirmButton.click()
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
   * 
   * @param collectionName - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
   */
  async verifyCollectionCreated(collectionName: string): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ—è–≤–∏–ª–∞—Å—å –≤ sidebar
    const collectionItem = this.page.getByTestId('smart-collection-item').filter({ hasText: collectionName })
    await expect(collectionItem).toBeVisible()
    
    console.log(`üìÅ Smart collection created: ${collectionName}`)
  }

  // ===== –ú–ï–¢–û–î–´ TEMPLATES =====

  /**
   * @description –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –∫–∞–∫ template
   * 
   * @param templateName - –ù–∞–∑–≤–∞–Ω–∏–µ template
   */
  async saveAsTemplate(templateName: string): Promise<void> {
    const templateButton = this.page.getByTestId('save-as-template-button')
    await templateButton.click()
    
    const nameInput = this.page.getByTestId('template-name-input')
    await nameInput.fill(templateName)
    
    const saveButton = this.page.getByTestId('save-template-confirm')
    await saveButton.click()
    
    // –û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await this.page.waitForTimeout(2000)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ template
   * 
   * @param templateName - –ù–∞–∑–≤–∞–Ω–∏–µ template
   */
  async verifyTemplateSaved(templateName: string): Promise<void> {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ template library
    const templatesTab = this.page.getByTestId('templates-library-tab')
    await templatesTab.click()
    
    await this.templateLibrary.waitFor({ state: 'visible' })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ template
    const templateItem = this.page.getByText(templateName)
    await expect(templateItem).toBeVisible()
    
    console.log(`üìã Template saved: ${templateName}`)
  }

  /**
   * @description –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –∏–∑ template
   * 
   * @param templateName - –ù–∞–∑–≤–∞–Ω–∏–µ template
   */
  async createFromTemplate(templateName: string): Promise<void> {
    // –ù–∞—Ö–æ–¥–∏–º template –∏ –∫–ª–∏–∫–∞–µ–º "Use Template"
    const templateItem = this.page.getByText(templateName)
    await templateItem.click()
    
    const useButton = this.page.getByTestId('use-template-button')
    await useButton.click()
    
    // –û–∂–∏–¥–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
    await this.page.waitForTimeout(3000)
  }

  /**
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é template
   */
  async verifyTemplatePersonalization(): Promise<void> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–∑–¥–∞–ª—Å—è –Ω–æ–≤—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
    const newArtifactPanel = this.page.getByTestId('artifact-panel')
    await expect(newArtifactPanel).toBeVisible()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø—É—Å—Ç–æ–π
    const content = this.page.getByTestId('artifact-content')
    await expect(content).not.toBeEmpty()
    
    console.log(`üé® Template personalization verified`)
  }

  // ===== –£–¢–ò–õ–ò–¢–´ =====

  /**
   * @description –°–æ–∑–¥–∞–µ—Ç batch –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –¥–ª—è performance —Ç–µ—Å—Ç–æ–≤
   * 
   * @param count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
   */
  async createBatchArtifacts(count: number): Promise<void> {
    console.log(`üöÄ Creating ${count} artifacts for performance test...`)
    
    // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è - –∏–º–∏—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –º–Ω–æ–≥–∏—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –º–æ–≥–ª–æ –±—ã –±—ã—Ç—å —á–µ—Ä–µ–∑ API –∏–ª–∏ seed data
    await this.page.waitForTimeout(1000)
    
    console.log(`‚úÖ Batch creation simulated for ${count} artifacts`)
  }

  /**
   * @description –í—ã–±–∏—Ä–∞–µ—Ç –≤—Å–µ –≤–∏–¥–∏–º—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
   */
  async selectAllArtifacts(): Promise<void> {
    const selectAllButton = this.page.getByTestId('select-all-artifacts')
    if (await selectAllButton.isVisible()) {
      await selectAllButton.click()
    } else {
      // Fallback - –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã
      const checkboxes = this.selectionCheckboxes
      const count = await checkboxes.count()
      for (let i = 0; i < count; i++) {
        await checkboxes.nth(i).click()
      }
    }
    
    await this.bulkActionsToolbar.waitFor({ state: 'visible' })
  }

  /**
   * @description –¢–µ—Å—Ç–∏—Ä—É–µ—Ç performance –ø–æ–∏—Å–∫–∞
   */
  async performanceSearchTest(): Promise<void> {
    const startTime = Date.now()
    
    await this.openAdvancedSearch()
    await this.setSearchFilters({ contentContains: 'test' })
    await this.executeSearch()
    
    const endTime = Date.now()
    const searchTime = endTime - startTime
    
    if (searchTime > 5000) { // 5 —Å–µ–∫—É–Ω–¥
      throw new Error(`Search too slow: ${searchTime}ms`)
    }
    
    console.log(`‚ö° Search performance: ${searchTime}ms`)
  }

  // ===== ERROR HANDLING =====

  /**
   * @description –¢–µ—Å—Ç–∏—Ä—É–µ—Ç error handling –≤ AI enhancement
   */
  async testAIEnhancementErrorHandling(): Promise<void> {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É AI enhancement
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –º–æ–≥–ª–æ –±—ã –±—ã—Ç—å —á–µ—Ä–µ–∑ mock –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    console.log(`üõ°Ô∏è AI Enhancement error handling tested`)
  }

  /**
   * @description –¢–µ—Å—Ç–∏—Ä—É–µ—Ç error handling –≤ bulk operations
   */
  async testBulkOperationErrorHandling(): Promise<void> {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É bulk operation
    console.log(`üõ°Ô∏è Bulk operations error handling tested`)
  }

  /**
   * @description –¢–µ—Å—Ç–∏—Ä—É–µ—Ç error handling –≤ template operations
   */
  async testTemplateErrorHandling(): Promise<void> {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É template operation
    console.log(`üõ°Ô∏è Template operations error handling tested`)
  }
}

// END OF: tests/helpers/content-management-page.ts